apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.jlleitschuh.gradle.ktlint'

group = 'htnk128'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    // kotlin
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1")
    // logging
    implementation("net.logstash.logback:logstash-logback-encoder:$logstashLogbackEncoderVersion")
    implementation("io.github.microutils:kotlin-logging:$kotlinLoggingVersion")
    // jackson json
    implementation("com.fasterxml.jackson.module:jackson-modules-java8:$jacksonVersion")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")
    implementation("com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion")
    // test
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("com.nhaarman:mockito-kotlin:$mockitoKotlin")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

ktlint {
    version = "0.29.0"
    debug = false
    verbose = false
    android = false
    outputToConsole = true
    reporters = ["PLAIN", "CHECKSTYLE"]
    ignoreFailures = false
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
    useJUnitPlatform {
        includeEngines "junit-vintage", "junit-jupiter"
    }
}
